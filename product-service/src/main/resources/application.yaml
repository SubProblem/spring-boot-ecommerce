eureka:
  instance:
    preferIpAddress: false
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka/

server:
  port: 8090

spring:
  cloud:
    discovery:
      enabled: true
  application:
    name: products-service
  config:
    import: optional:configserver:http://config-service:8888
  main:
    allow-circular-references: true
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
      format_sql: true
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    consumer:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAPSERVERS}
      group-id: orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: com.subproblem.orderservice.producer.ProductMessage:com.subproblem.productservice.consumer.ProductMessage